

{ Local synonyms for primitive constructors can be used for pattern matching }
define oppx = 
  let links = left in let f(links(x)) = right(x) in f;

define fibcps(n, k) =
  if n < 2 then k(n) else
   fibcps(n-1, function (x) fibcps(n-2, function (y) k(x+y)));

_install("Cell");
__token(#!, #monop, 0, 0); 
__token(#:=, #binop, 1, 1);
define ! = _primitive("!");
define := = _primitive(":=");


define trunk(x + 0.5) = x | trunk(x) = x;

define flic(n, x) =
  let flac(x) = [x+1, x+2] when numeric(x)
    | flac(x) = map(function (x) flac(x), x) in
  if n = 0 then x else flic(n-1, flac(x)); 
